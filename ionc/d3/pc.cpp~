#include<bits/stdc++.h>
using namespace std;

vector<bool> vis;
vector<vector<int>> v;

void dfs(int num){
	vis[num]=1;
	int len=v[num].size();
	for(int i=0;i<len;i++){
  		if(!vis[v[num][i]]){
	 		dfs(v[num][i]);
 		}
	}
	return;
}

int main(){
   ios::sync_with_stdio(0),cin.tie(0);
   int n,m;
   cin>>n>>m;
	vis.resize(n+1);
   v.resize(n+1);
   long long a[m],b[m];
	for(int i=0;i<m;i++){
		cin>>a[i]>>b[i];
		if(a[i]==b[i]){
			a[i]=(int)1e9;
			continue;
		}
		v[a[i]].emplace_back(b[i]);
      v[b[i]].emplace_back(a[i]);
   }
	dfs(a[0]);
	for(int i=0;i<m;i++){
		if(!vis[a[i]] && a[i]!=(int)1e9){
		  dfs(a[i]);	
		}
	}
	int ans=0;
	for(int i=1;i<=n;i++){
		if(!vis[i]) ans++;
	}
	cout<<ans<<'\n';
	return 0;
}

